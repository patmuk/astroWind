---
import { Icon } from 'astro-icon';
import Logo from '~/components/Logo.astro';
import ToggleTheme from '~/components/common/ToggleTheme.astro';
import ToggleMenu from '~/components/common/ToggleMenu.astro';

import { getAsset, getHomePermalink } from '~/utils/permalinks';
import LanguagePicker from './LanguagePicker.astro';

import { getLangFromUrl } from '~/utils/i18n/i18n_utils';
import { defaultLang, Link, LinkMenu, isLinkMenu, ActionLink, ActionType } from '~/utils/i18n/translations';

interface Props {
  links?: Array<LinkMenu | Link>;
  actions?: Array<ActionLink>;
  isSticky?: boolean;
  showToggleTheme?: boolean;
  showRssFeed?: boolean;
  position?: string;
}

const {
  links = [],
  actions = [],
  isSticky = false,
  showToggleTheme = false,
  showRssFeed = false,
  position = 'center',
} = Astro.props;

const lang = getLangFromUrl(Astro.url);
---

<header
  class:list={[
    { sticky: isSticky, relative: !isSticky },
    'top-0 z-40 flex-none mx-auto w-full transition-all ease-in duration-100',
  ]}
  id="header"
>
  <div class="mx-auto w-full max-w-7xl px-3 py-3 md:flex md:justify-between md:px-4 md:py-3.5">
    <div class:list={[{ 'mr-auto': position === 'right' }, 'flex justify-between']}>
      <div class="flex items-center">
        <a class="mr-4" href={getHomePermalink(lang)}>
          <!-- <a class="mr-4" href={`/${language}`}> -->
          <Logo />
        </a>
        <LanguagePicker />
      </div>
      <div class="flex items-center md:hidden">
        {showToggleTheme && <ToggleTheme />}
        <ToggleMenu />
      </div>
    </div>

    <nav
      class="hidden h-[calc(100vh-72px)] w-full items-center overflow-y-auto dark:text-slate-200 md:mx-5 md:flex md:h-auto md:w-auto md:overflow-visible"
      aria-label="Main navigation"
    >
      <ul class="flex w-full flex-col pt-8 text-xl md:w-auto md:flex-row md:self-center md:pt-0 md:text-base">
        {
          links.map((link) => (
            <li class={isLinkMenu(link) ? 'dropdown' : ''}>
              {isLinkMenu(link) ? (
                <>
                  <button class="flex items-center px-4 py-3 font-medium transition duration-150 ease-in-out hover:text-gray-900 dark:hover:text-white">
                    {(link[lang] ??= link[defaultLang])}{' '}
                    <Icon name="tabler-icon-chevron-down" class="ml-0.5 hidden h-3.5 w-3.5 md:inline" />
                  </button>
                  <ul class="dropdown-menu dark:md:bg-dark rounded pl-4 font-medium drop-shadow-xl md:absolute md:hidden md:min-w-[200px] md:bg-white/90 md:pl-0 md:backdrop-blur-md">
                    {link.links.map((link) => (
                      <li>
                        <a
                          class="whitespace-no-wrap block px-5 py-2 first:rounded-t last:rounded-b dark:hover:bg-gray-700 md:hover:bg-gray-200"
                          href={(link[lang] ??= link[defaultLang]).href}
                        >
                          {(link[lang] ??= link[defaultLang]).text}
                        </a>
                      </li>
                    ))}
                  </ul>
                </>
              ) : (
                <a
                  class="flex items-center px-4 py-3 font-medium transition duration-150 ease-in-out hover:text-gray-900 dark:hover:text-white"
                  href={(link[lang] ??= link[defaultLang]).href}
                >
                  {(link[lang] ??= link[defaultLang]).text}
                </a>
              )}
            </li>
          ))
        }
      </ul>
    </nav>
    <div class:list={[{ 'ml-auto': position === 'left' }, 'md:self-center flex items-center md:mb-0']}>
      <div class="hidden items-center md:flex">
        {showToggleTheme && <ToggleTheme iconClass="w-5 h-5" />}

        {
          showRssFeed && (
            <a
              class="text-muted inline-flex items-center rounded-lg p-2.5 text-sm hover:bg-gray-100 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-700"
              aria-label="RSS Feed"
              href={getAsset('/rss.xml')}
            >
              <Icon name="tabler-icon-rss" class="h-5 w-5" />
            </a>
          )
        }
        {
          actions?.length ? (
            <span class="ml-4">
              {actions.map(({ action, link }) => (
                <a
                  class:list={[
                    'btn ml-2 py-2.5 px-5.5 md:px-6 font-semibold shadow-none text-sm',
                    {
                      'btn-ghost': action === ActionType.GhostButton,
                      'btn-primary': action === ActionType.PrimaryButton,
                    },
                  ]}
                  href={(link[lang] ??= link[defaultLang]).href}
                >
                  <Fragment set:html={(link[lang] ??= link[defaultLang]).text} />
                </a>
              ))}
            </span>
          ) : (
            ''
          )
        }
      </div>
    </div>
  </div>
</header>
